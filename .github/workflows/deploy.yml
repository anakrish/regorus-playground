name: Deploy Regorus Playground

on:
  # Trigger on pushes to main branch
  push:
    branches: [ main ]
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Trigger on schedule to check for updates (runs daily at 6 AM UTC)
  schedule:
    - cron: '0 06 * * *'
  
  # Trigger via repository dispatch from source repo
  repository_dispatch:
    types: [playground-update]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout Source Repository
      uses: actions/checkout@v5
      with:
        repository: anakrish/regorus
        ref: playground
        path: regorus-source
        token: ${{ secrets.SOURCE_REPO_TOKEN || github.token }}
      
    - name: Prepare Deployment Files
      run: |
        # Create deployment directory
        mkdir -p deploy
        
        # Copy built playground files from source repo
        if [ -d "regorus-source/docs/playground" ]; then
          cp -r regorus-source/docs/playground/* deploy/
        else
          echo "Error: playground files not found in source repository"
          exit 1
        fi
        
        # Create .nojekyll to bypass Jekyll processing
        touch deploy/.nojekyll
        
        # Verify deployment has required files
        if [ ! -f deploy/index.html ]; then
          echo "Error: No index.html found in deployment files"
          exit 1
        fi
        
        echo "‚úÖ Deployment files verified:"
        find deploy -name "*.html" -o -name "*.js" -o -name "*.css" -o -name ".nojekyll" | head -10
        
    - name: Setup Pages
      uses: actions/configure-pages@v5
      
    - name: Upload Pages Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./deploy
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Output Deployment Info
      run: |
        echo "üöÄ Playground deployed successfully!"
        echo "üìç URL: ${{ steps.deployment.outputs.page_url }}"
        echo "üìù Source: anakrish/regorus (playground branch)"
        echo "üìÖ Deployed: $(date -u)"